//
// Button Colors
// -------------------------
$buttons: (
	white: (
		var(--color-white),
		var(--color-white-dark),
		var(--color-black),
		var(--color-white),
		var(--color-white),
	),
	black: (
		var(--color-black),
    darken(var(--color-gray-dark), 10%),
		var(--color-black-light),
		var(--color-white),
		var(--color-black),
		var(--color-black),
	),
	gray: (
		var(--color-white-dark),
		var(--color-gray-light),
		var(--color-black),
		var(--color-gray-dark),
		var(--color-white-dark),
	),
	gray-dark: (
		var(--color-gray-dark),
		var(--color-black),
		var(--color-black),
		var(--color-white),
		var(--color-gray-light),
		var(--color-gray-light),
	),
	transparent: (
		transparent,
		none,
		var(--color-black),
		none,
		none,
	),
);

@each $name, $colors in $buttons {
	$bg-color: nth($colors, 1);
	$hover-color: nth($colors, 1);
	$text-color: nth($colors, 3);
	$border-color: nth($colors, 4);
	$light-color: nth($colors, 5);

	.c-button--#{$name} {
		background: $bg-color;
		transition: $g-transition;
		color: $text-color !important;
		border: 1px solid $border-color !important;

		&:hover {
			background-color: $hover-color;
			transition: $g-transition;
			border: 1px solid $hover-color !important;
		}
	}

	.c-button--outline-#{$name} {
		background-color: transparent;
		transition: $g-transition;
		color: $border-color !important;
		border: 1px solid $border-color !important;

		&:hover {
			color: var(--color-white) !important;
			background-color: $hover-color;
			transition: $g-transition;
			border: 1px solid $hover-color !important;
		}

		&.c-button--outline-gray {
			&:hover {
				color: var(--color-white) !important;
			}
		}

		&.c-button--outline-gray-dark {
			color: var(--color-gray-dark) !important;

			&:hover {
				border-color: var(--color-gray-dark);
				background: transparent;
			}
		}
	}

	.c-button--elevate-#{$name} {
		background-color: $light-color;
		transition: $g-transition;
		color: $border-color !important;
		border: 1px solid $bg-color !important;

		&:hover {
			background-color: $bg-color;
			color: $text-color !important;
		}
	}
}

.c-button {
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;
	user-select: none;
	line-height: 1;
	color: var(--color-white);
	border: none;
	cursor: pointer;
	border-radius: $g-border-radius-4;
	font-size: $g-font-size-12;
	white-space: nowrap;
	overflow: hidden;
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;

	&--gray {
		border: 1px solid var(--color-white-dark) !important;

		&:hover {
			background-color: var(--color-white-dark);
		}
	}

	&:focus {
		outline: none;
	}

	&--transparent {
		&:hover {
			text-decoration: underline solid var(--color-black) 1px !important;
		}
	}

	&[disabled='disabled'] {
		background-color: var(--color-gray-light-100);
		border: 1px solid var(--color-gray-light-100) !important;
		pointer-events: none;
		cursor: not-allowed;
	}

	svg {
		margin-left: 8px;
		margin-right: 8px;
	}

	&--icon-right {
		svg {
			margin-inline-end: 0;
			margin-inline-start: 8px;
		}
	}

	&--icon-left {
		svg {
			margin-inline-end: 8px;
			margin-inline-start: 0;
		}
	}

	&--only-icon {
		width: 40px;
		height: 40px;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: map-get($g-gaps, xsmall);

		svg {
			margin: 0;
		}

		& ~ & {
			margin-left: 10px;
		}

		&-lg {
			padding: 0.2px;
		}
	}

	//
	// Pill
	//
	&--pill {
		border-radius: 12px;
	}

	&--has-shadow {
		box-shadow: (0px 3px 6px rgba(0, 0, 0, 0.16));
	}

	//
	// Custom Sizing
	//

	&--xs {
		padding-top: 0.55rem;
		padding-bottom: 0.55rem;
		// height: 35px;
		font-size: $g-font-size-13;

		&.c-button--only-icon {
			width: 30px;
			height: 30px;
			padding: 0;
		}
	}

	&--sm {
		padding-top: 0.75rem;
		padding-bottom: 0.75rem;
		// height: 35px;
		font-size: $g-font-size-13;

		&.c-button--only-icon {
			width: 30px;
			height: 30px;
			padding: 0;
		}
	}

	&--md {
		padding-top: 1rem;
		padding-bottom: 1rem;
		// height: 40px;
		font-size: $g-font-size-base;

		&.c-button--only-icon {
			width: 35px;
			height: 35px;
			padding: 0;
		}
	}

	&--lg {
		padding-top: 3rem;
		padding-bottom: 3rem;
		// height: 45px;
		font-size: $g-font-size-18;

		&.c-button--only-icon {
			width: 52px;
			height: 52px;
			padding: 0;
		}
	}

	//
	// Custom Width
	//
	&--xs-w {
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}

	&--sm-w {
		padding-left: 1.5rem;
		padding-right: 1.5rem;
	}

	&--md-w {
		padding-left: 2.75rem;
		padding-right: 2.75rem;
	}

	&--lg-w {
		padding-left: 3rem;
		padding-right: 3rem;
	}

	&--xl-w {
		padding-left: 4.5rem;
		padding-right: 4.5rem;
	}

	&--block {
		width: 100%;
	}

	//Font Weight
	&--light {
	}

	&--medium {
	}

	//Font Size
	&--11 {
		font-size: $g-font-size-11;
	}

	//text transform
	&--uppercase {
		text-transform: uppercase;
	}

	//
	// multi-line
	//
	&--multi-line {
		display: inline-grid;

		span {
			font-size: 8px;
			margin-bottom: -3px;
		}
	}

	//Fit Content
	&--fit {
		max-width: fit-content;
	}

	&--social {
		padding-inline-start: 12px;
		padding-inline-end: 12px;
		border: 1px solid var(--color-gray-light) !important;
		color: var(--color-black) !important;
		background-color: var(--color-white);
		position: relative;
		font-size: $g-font-size-12;

		img {
			position: absolute;
			inset-inline-start: 12px;
		}

		&:hover {
			background-color: var(--color-white);
		}
	}

	&--fav {
		svg {
			margin-inline-end: map-get($g-gaps, small);
			color: var(--color-gray-dark);
			transform: scale(1);
			transition: ease-in-out all 0.1s;
		}

		&-active {
			svg {
				color: var(--color-warning);
				transition: ease-in-out color 0.1s;
			}
		}

		&:active {
			svg {
				transform: scale(0.8);
				transition: ease-in-out transform 0.1s;
			}
		}
	}
}

@include media-breakpoint-down(md) {
	.c-button {
		&--extra-wide {
			padding-left: 1.5rem;
			padding-right: 1.5rem;
		}
	}
}
